{"version":3,"sources":["features/userSlice.js","InputOption.js","Post.js","firebase.js","Feed.js","HeaderOptions.js","Header.js","Login.js","Sidebar.js","Widget.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","InputOption","Icon","title","color","className","style","Post","forwardRef","ref","description","message","photoUrl","Avatar","src","ThumbUpAltOutlined","ChatOutlined","ShareOutlined","SendOutlined","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","Create","value","onChange","e","target","type","onClick","preventDefault","add","displayName","email","photoURL","timestamp","FieldValue","serverTimestamp","Image","Subscriptions","EventNote","CalendarViewDay","HeaderOptions","avatar","Header","dispatch","useDispatch","alt","placeholder","HomeIcon","SupervisorAccount","BusinessCenter","Chat","Notifications","signOut","Login","setName","setEmail","password","setPassword","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Sidebar","recentItem","topic","Widget","newsArticle","heading","subtitle","FiberManualRecord","Info","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6c62400.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from 'react'\nimport './InputOption.css'\n\nfunction InputOption({ Icon, title, color }) {\n    return (\n        <div className=\"inputOption\">\n            <Icon style={{ color: color}} />\n            <h4>{title}</h4>\n        </div>\n    )\n}\n\nexport default InputOption\n","import { Avatar } from '@material-ui/core'\nimport { ChatOutlined, SendOutlined, ShareOutlined, ThumbUpAltOutlined } from '@material-ui/icons'\nimport React, { forwardRef } from 'react'\nimport InputOption from './InputOption'\nimport './Post.css'\n\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\n    return (\n        <div ref={ref} className=\"post\">\n            <div className=\"post__header\">\n                <Avatar src={photoUrl}>\n                    {name[0]}\n                </Avatar>\n                <div className=\"post__info\">\n                    <h2>\n                    {name}\n                    </h2>\n                    <p>{description}</p>\n                </div>\n            </div>\n            <div className=\"post__body\">\n                <p>{message}</p>\n            </div>\n\n            <div className=\"post__buttons\">\n                <InputOption Icon={ThumbUpAltOutlined} title=\"like\" color=\"gray\" />\n                <InputOption Icon={ChatOutlined} title=\"Comment\" color=\"gray\" />\n                <InputOption Icon={ShareOutlined} title=\"Share\" color=\"gray\" />\n                <InputOption Icon={SendOutlined} title=\"Send\" color=\"gray\" />\n            </div>\n        </div>\n    )\n})\n\nexport default Post\n","import firebase from 'firebase'\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCZRvUOICPHdWHkf7Apfivs2X2pFzhViNI\",\n  authDomain: \"linkedin-clone-ud.firebaseapp.com\",\n  projectId: \"linkedin-clone-ud\",\n  storageBucket: \"linkedin-clone-ud.appspot.com\",\n  messagingSenderId: \"408897984211\",\n  appId: \"1:408897984211:web:6d9358d9e793c2ae456626\",\n  measurementId: \"G-T5Q1JH4KZ8\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import { CalendarViewDay, Create, EventNote, Image, Subscriptions } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport Post from './Post'\nimport './Feed.css'\nimport InputOption from './InputOption'\nimport { db } from './firebase'\nimport firebase from 'firebase'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport FlipMove from 'react-flip-move';\n\nfunction Feed() {\n\n        const user = useSelector(selectUser);\n    const [input, setInput] = useState('')\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        db.collection(\"posts\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot(snapshot => \n            setPosts(snapshot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data(),\n                }\n            )))\n        )\n    }, [])\n\n\n\n    const sendPost = (e) => {\n        e.preventDefault();\n\n        db.collection('posts').add({\n            name: user.displayName,\n            description: user.email,\n            message: input,\n            photoUrl: user.photoURL || \"\",\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n\n        setInput(\"\");\n    }\n    return (\n        <div className=\"feed\">\n            <div className=\"feed__inputContainer\">\n               <div className=\"feed__input\">\n                <Create />\n                <form>\n                    <input \n                    value={input} \n                    onChange={(e) => setInput(e.target.value)}\n                    type=\"text\"/>\n                    <button type=\"submit\" onClick={sendPost}>\n                        Send\n                    </button>\n                </form>\n               </div>\n\n               <div className=\"feed__inputOptions\">\n                   <InputOption Icon={Image} title=\"Photo\" color=\"#70B5F9\" />\n                   <InputOption Icon={Subscriptions} title=\"Video\" color=\"#E7A33E\" />\n                   <InputOption Icon={EventNote} title=\"Event\" color=\"#C0CBCD\" />\n                   <InputOption Icon={CalendarViewDay} title=\"Write Article\" color=\"#7FC15E\" />\n               </div>\n\n            </div>\n\n            <FlipMove>\n\n\n                {posts.map(({ id, data: { name, description, message, photoUrl } }) =>(\n                    <Post \n                        key={id}\n                        name={name}\n                        description={description}\n                        message={message}\n                        photoUrl={photoUrl}\n                    />\n                ))}\n            </FlipMove>\n                \n        </div>\n    )\n}\n\nexport default Feed\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport './HeaderOptions.css'\n\nfunction HeaderOptions({ avatar, Icon, title, onClick }) {\n  \n    const user = useSelector(selectUser);\n\n    return (\n        <div onClick={onClick} className=\"header__options\">\n            {Icon && <Icon className=\"headeroption__icon\" />}\n            {avatar && (\n                <Avatar className=\"headeroption__icon\" src={user?.photoURL}>{user?.email[0]}</Avatar>\n            )}\n            <h3 className=\"headeroption__title\">{title}</h3>\n        </div>\n    )\n}\n\nexport default HeaderOptions\n","import React from 'react';\nimport './Header.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HeaderOptions from './HeaderOptions';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { BusinessCenter, Chat, Notifications, SupervisorAccount } from '@material-ui/icons';\nimport { useDispatch } from 'react-redux';\nimport { logout } from './features/userSlice';\nimport { auth } from './firebase';\n\nfunction Header() {\n\n    const dispatch = useDispatch();\n\n    const logoutOfApp = () => {\n        dispatch(logout());\n        auth.signOut();\n    }\n\n    return (\n        <div className=\"header\">\n\n            <div className=\"header__left\">\n            <img src=\"https://img.flaticon.com/icons/png/512/174/174857.png?size=1200x630f&pad=10,10,10,10&ext=png&bg=FFFFFFFF\" alt=\"\" />\n\n            <div className=\"header__search\">\n            {/* SearchIcon */}\n                <SearchIcon />\n                <input placeholder=\"search\" type=\"text\"/>\n            </div>\n            </div>\n            <div className=\"header__right\">\n                <HeaderOptions Icon={HomeIcon} title=\"Home\" />\n                <HeaderOptions Icon={SupervisorAccount}  title=\"My Network\"/>\n                <HeaderOptions Icon={BusinessCenter} title=\"Jobs\" />\n                <HeaderOptions Icon={Chat} title=\"Messaging\" />\n                <HeaderOptions Icon={Notifications} title=\"Notifications\" />\n                <HeaderOptions avatar={true}\n                onClick={logoutOfApp}\n                 title=\"me\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { login } from './features/userSlice';\nimport { auth } from './firebase';\nimport './Login.css'\n\nfunction Login() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [profilePic, setProfilePic] = useState('');\n    const dispatch = useDispatch();\n\n    const register = () => {\n        if(!name) {\n            return alert(\"Please enter a full name\");\n        }\n\n        auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((userAuth) => {\n            userAuth.user\n            .updateProfile({\n               displayName: name,\n              photoURL: profilePic,  \n            })\n            .then(() => {\n                dispatch(\n                    login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoURL: profilePic,\n                })\n                );\n            });\n        }).catch(error => alert(error.message));\n    };\n    const loginToApp = (e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n        .then( userAuth => {\n            dispatch(\n                login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: userAuth.user.displayName,\n                photoUrl: userAuth.user.profileURL,\n            })\n            );\n        }).catch(error => alert(error));\n    };\n    return (\n        <div className=\"login\">\n            <img src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo_2013.svg_.png\" alt=\"\"/>\n\n            <form>\n                <input type=\"text\" \n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                placeholder=\"Full name (required if registering)\"/>\n                <input \n                value={profilePic}\n                onChange={(e) => setProfilePic(e.target.value)}\n                type=\"text\"\n                placeholder=\"Profile pic URL (Optional)\"\n                />\n                <input \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Email Address\"\n                type=\"email\"/>\n                <input \n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\" \n                placeholder=\"password\"\n                />\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\n            </form>\n            <p>Not a member?\n            <span className=\"login__register\" \n            onClick={register}\n            >Register Now</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Login\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport './Sidebar.css'\n\nfunction Sidebar() {\n\n    const user = useSelector(selectUser)\n\n    const recentItem = (topic) => (\n        <div className=\"sidebar__recentItem\">\n            <span className=\"sidebar__hash\">\n                #\n            </span>\n            <p>{topic}</p>\n        </div>\n    )\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__top\">\n                <img src=\"https://www.geeklawblog.com/wp-content/uploads/sites/528/2018/12/liprofile-656x369.png\" alt=\"\"/>\n                <Avatar src={user.photoURL} className=\"sidebar__avatar\">\n                    {user.email[0]}\n                </Avatar>\n                <h2>{user.displayName}</h2>\n                <h4>{user.email}</h4>\n            </div>\n\n            <div className=\"sidebar__stats\">\n                <div className=\"sidebar__stat\">\n                    <p>Who viewed you</p>\n                    <p className=\"sidebar__statNumber\">\n                        2,335\n                    </p>\n                </div>\n                <div className=\"sidebar__stat\">\n                    <p>Views on Post</p>\n                    <p className=\"sidebar__statNumber\">\n                        2,675\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"sidebar__bottom\">\n                <p>Recent</p>\n                {recentItem('react.js')}\n                {recentItem('programmming')}\n                {recentItem('design')}\n                {recentItem('developer')}\n                {recentItem('bobbywork')}\n                {recentItem('log conecpt')}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import { FiberManualRecord, Info } from '@material-ui/icons'\nimport React from 'react'\nimport './Widget.css'\n\nfunction Widget() {\n    const newsArticle = (heading, subtitle) =>(\n        <div className=\"widgets__article\">\n            <div className=\"widgets__articleLeft\">\n                <FiberManualRecord />\n            </div>\n            <div className=\"widgets__articleRight\">\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    )\n    return (\n        <div className=\"widgets\">\n            <div className=\"widegets__header\">\n                <Info />\n                <h2 className=\"widgets__title\">LinkedIn News</h2>\n            </div>\n            {newsArticle(\"PAPA React is back\", \"Top news - 4923 readers\")}\n            {newsArticle(\"Cornavirus is scattering the world\", \"Top news - 9938 readers\")}\n            {newsArticle(\"BORN OF GOD is a nice Album\", \"Top news - 5000 readers\")}\n        </div>\n    )\n}\n\nexport default Widget\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport Feed from './Feed';\r\nimport { auth } from './firebase';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Sidebar from './Sidebar';\r\nimport Widget from './Widget';\r\n\r\nfunction App() {\r\n\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n   auth.onAuthStateChanged(userAuth => {\r\n     if(userAuth){\r\n       // user logged in\r\n       dispatch(login({\r\n           email: userAuth.email,\r\n           uid: userAuth.uid,\r\n           displayName: userAuth.displayName,\r\n           photoURL: userAuth.photoURL,\r\n       }))\r\n     }\r\n     else{\r\n       // user logged out\r\n       dispatch(logout());\r\n     }\r\n   });\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n      {/* Header */}\r\n     <Header />\r\n\r\n     {!user ? (\r\n       <Login />\r\n       ) : (\r\n    <div className=\"app__body\">\r\n      <Sidebar />\r\n      <Feed />\r\n      <Widget />\r\n    </div>\r\n     )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}